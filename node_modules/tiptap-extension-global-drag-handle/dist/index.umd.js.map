{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["import { Extension } from '@tiptap/core';\r\nimport { NodeSelection, Plugin, PluginKey, TextSelection } from '@tiptap/pm/state';\r\nimport { Fragment, Slice, Node } from '@tiptap/pm/model';\r\n\r\n// @ts-ignore\r\nimport { __serializeForClipboard, EditorView } from '@tiptap/pm/view';\r\n\r\nexport interface GlobalDragHandleOptions {\r\n  /**\r\n   * The width of the drag handle\r\n   */\r\n  dragHandleWidth: number;\r\n\r\n  /**\r\n   * The treshold for scrolling\r\n   */\r\n  scrollTreshold: number;\r\n\r\n  /*\r\n   * The css selector to query for the drag handle. (eg: '.custom-handle').\r\n   * If handle element is found, that element will be used as drag handle. If not, a default handle will be created\r\n   */\r\n  dragHandleSelector?: string;\r\n}\r\nfunction absoluteRect(node: Element) {\r\n  const data = node.getBoundingClientRect();\r\n  const modal = node.closest('[role=\"dialog\"]');\r\n\r\n  if (modal && window.getComputedStyle(modal).transform !== 'none') {\r\n    const modalRect = modal.getBoundingClientRect();\r\n\r\n    return {\r\n      top: data.top - modalRect.top,\r\n      left: data.left - modalRect.left,\r\n      width: data.width,\r\n    };\r\n  }\r\n  return {\r\n    top: data.top,\r\n    left: data.left,\r\n    width: data.width,\r\n  };\r\n}\r\n\r\nfunction nodeDOMAtCoords(coords: { x: number; y: number }) {\r\n  return document\r\n    .elementsFromPoint(coords.x, coords.y)\r\n    .find(\r\n      (elem: Element) =>\r\n        elem.parentElement?.matches?.('.ProseMirror') ||\r\n        elem.matches(\r\n          [\r\n            'li',\r\n            'p:not(:first-child)',\r\n            'pre',\r\n            'blockquote',\r\n            'h1, h2, h3, h4, h5, h6',\r\n          ].join(', '),\r\n        ),\r\n    );\r\n}\r\n\r\nfunction nodePosAtDOM(\r\n  node: Element,\r\n  view: EditorView,\r\n  options: GlobalDragHandleOptions,\r\n) {\r\n  const boundingRect = node.getBoundingClientRect();\r\n\r\n  return view.posAtCoords({\r\n    left: boundingRect.left + 50 + options.dragHandleWidth,\r\n    top: boundingRect.top + 1,\r\n  })?.inside;\r\n}\r\n\r\nfunction calcNodePos(pos: number, view: EditorView) {\r\n  const $pos = view.state.doc.resolve(pos);\r\n  if ($pos.depth > 1) return $pos.before($pos.depth);\r\n  return pos;\r\n}\r\n\r\nexport function DragHandlePlugin(options: GlobalDragHandleOptions & {pluginKey: string}) {\r\n  let listType = '';\r\n  function handleDragStart(event: DragEvent, view: EditorView) {\r\n    view.focus();\r\n\r\n    if (!event.dataTransfer) return;\r\n\r\n    const node = nodeDOMAtCoords({\r\n      x: event.clientX + 50 + options.dragHandleWidth,\r\n      y: event.clientY,\r\n    });\r\n\r\n    if (!(node instanceof Element)) return;\r\n\r\n    let draggedNodePos = nodePosAtDOM(node, view, options);\r\n    if (draggedNodePos == null || draggedNodePos < 0) return;\r\n    draggedNodePos = calcNodePos(draggedNodePos, view);\r\n\r\n    const { from, to } = view.state.selection;\r\n    const diff = from - to;\r\n\r\n    const fromSelectionPos = calcNodePos(from, view);\r\n    let differentNodeSelected = false;\r\n\r\n    const nodePos = view.state.doc.resolve(fromSelectionPos);\r\n\r\n    // Check if nodePos points to the top level node\r\n    if (nodePos.node().type.name === 'doc') differentNodeSelected = true;\r\n    else {\r\n      const nodeSelection = NodeSelection.create(\r\n        view.state.doc,\r\n        nodePos.before(),\r\n      );\r\n      // Check if the node where the drag event started is part of the current selection\r\n      differentNodeSelected = !(\r\n        draggedNodePos + 1 >= nodeSelection.$from.pos &&\r\n        draggedNodePos <= nodeSelection.$to.pos\r\n      );\r\n    }\r\n\r\n    if (\r\n      !differentNodeSelected &&\r\n      diff !== 0 &&\r\n      !(view.state.selection instanceof NodeSelection)\r\n    ) {\r\n      const endSelection = NodeSelection.create(view.state.doc, to - 1);\r\n      const multiNodeSelection = TextSelection.create(\r\n        view.state.doc,\r\n        draggedNodePos,\r\n        endSelection.$to.pos,\r\n      );\r\n      view.dispatch(view.state.tr.setSelection(multiNodeSelection));\r\n    } else {\r\n      const nodeSelection = NodeSelection.create(\r\n        view.state.doc,\r\n        draggedNodePos,\r\n      );\r\n      view.dispatch(view.state.tr.setSelection(nodeSelection));\r\n    }\r\n\r\n    // If the selected node is a list item, we need to save the type of the wrapping list e.g. OL or UL\r\n    if (\r\n      view.state.selection instanceof NodeSelection &&\r\n      view.state.selection.node.type.name === 'listItem'\r\n    ) {\r\n      listType = node.parentElement!.tagName;\r\n    }\r\n\r\n    const slice = view.state.selection.content();\r\n    const { dom, text } = __serializeForClipboard(view, slice);\r\n\r\n    event.dataTransfer.clearData();\r\n    event.dataTransfer.setData('text/html', dom.innerHTML);\r\n    event.dataTransfer.setData('text/plain', text);\r\n    event.dataTransfer.effectAllowed = 'copyMove';\r\n\r\n    event.dataTransfer.setDragImage(node, 0, 0);\r\n\r\n    view.dragging = { slice, move: event.ctrlKey };\r\n  }\r\n\r\n  let dragHandleElement: HTMLElement | null = null;\r\n\r\n  function hideDragHandle() {\r\n    if (dragHandleElement) {\r\n      dragHandleElement.classList.add('hide');\r\n    }\r\n  }\r\n\r\n  function showDragHandle() {\r\n    if (dragHandleElement) {\r\n      dragHandleElement.classList.remove('hide');\r\n    }\r\n  }\r\n\r\n  return new Plugin({\r\n    key: new PluginKey(options.pluginKey),\r\n    view: (view) => {\r\n      const handleBySelector = options.dragHandleSelector ? document.querySelector<HTMLElement>(options.dragHandleSelector) : null\r\n      dragHandleElement = handleBySelector?? document.createElement('div');\r\n      dragHandleElement.draggable = true;\r\n      dragHandleElement.dataset.dragHandle = '';\r\n      dragHandleElement.classList.add('drag-handle');\r\n\r\n\r\n      function onDragHandleDragStart(e: DragEvent) {\r\n        handleDragStart(e, view);\r\n      }\r\n\r\n      dragHandleElement.addEventListener('dragstart', onDragHandleDragStart);\r\n\r\n      function onDragHandleDrag(e: DragEvent) {\r\n        hideDragHandle();\r\n        let scrollY = window.scrollY;\r\n        if (e.clientY < options.scrollTreshold) {\r\n          window.scrollTo({ top: scrollY - 30, behavior: 'smooth' });\r\n        } else if (window.innerHeight - e.clientY < options.scrollTreshold) {\r\n          window.scrollTo({ top: scrollY + 30, behavior: 'smooth' });\r\n        }\r\n      }\r\n\r\n      dragHandleElement.addEventListener('drag', onDragHandleDrag);\r\n\r\n      hideDragHandle();\r\n\r\n      if(!handleBySelector) {\r\n        view?.dom?.parentElement?.appendChild(dragHandleElement);\r\n      }\r\n\r\n      return {\r\n        destroy: () => {\r\n          if(!handleBySelector) {\r\n            dragHandleElement?.remove?.();\r\n          }\r\n          dragHandleElement?.removeEventListener('drag', onDragHandleDrag);\r\n          dragHandleElement?.removeEventListener('dragstart', onDragHandleDragStart);\r\n          dragHandleElement = null;\r\n        },\r\n      };\r\n    },\r\n    props: {\r\n      handleDOMEvents: {\r\n        mousemove: (view, event) => {\r\n          if (!view.editable) {\r\n            return;\r\n          }\r\n\r\n          const node = nodeDOMAtCoords({\r\n            x: event.clientX + 50 + options.dragHandleWidth,\r\n            y: event.clientY,\r\n          });\r\n\r\n          const notDragging = node?.closest('.not-draggable');\r\n\r\n          if (\r\n            !(node instanceof Element) ||\r\n            node.matches('ul, ol') ||\r\n            notDragging\r\n          ) {\r\n            hideDragHandle();\r\n            return;\r\n          }\r\n\r\n          const compStyle = window.getComputedStyle(node);\r\n          const parsedLineHeight = parseInt(compStyle.lineHeight, 10);\r\n          const lineHeight = isNaN(parsedLineHeight)\r\n            ? parseInt(compStyle.fontSize) * 1.2\r\n            : parsedLineHeight;\r\n          const paddingTop = parseInt(compStyle.paddingTop, 10);\r\n\r\n          const rect = absoluteRect(node);\r\n\r\n          rect.top += (lineHeight - 24) / 2;\r\n          rect.top += paddingTop;\r\n          // Li markers\r\n          if (node.matches('ul:not([data-type=taskList]) li, ol li')) {\r\n            rect.left -= options.dragHandleWidth;\r\n          }\r\n          rect.width = options.dragHandleWidth;\r\n\r\n          if (!dragHandleElement) return;\r\n\r\n          dragHandleElement.style.left = `${rect.left - rect.width}px`;\r\n          dragHandleElement.style.top = `${rect.top}px`;\r\n          showDragHandle();\r\n        },\r\n        keydown: () => {\r\n          hideDragHandle();\r\n        },\r\n        mousewheel: () => {\r\n          hideDragHandle();\r\n        },\r\n        // dragging class is used for CSS\r\n        dragstart: (view) => {\r\n          view.dom.classList.add('dragging');\r\n        },\r\n        drop: (view, event) => {\r\n          view.dom.classList.remove('dragging');\r\n          hideDragHandle();\r\n          let droppedNode: Node | null = null;\r\n          const dropPos = view.posAtCoords({\r\n            left: event.clientX,\r\n            top: event.clientY,\r\n          });\r\n\r\n          if (!dropPos) return;\r\n\r\n          if (view.state.selection instanceof NodeSelection) {\r\n            droppedNode = view.state.selection.node;\r\n          }\r\n          if (!droppedNode) return;\r\n\r\n          const resolvedPos = view.state.doc.resolve(dropPos.pos);\r\n\r\n          const isDroppedInsideList =\r\n            resolvedPos.parent.type.name === 'listItem';\r\n\r\n          // If the selected node is a list item and is not dropped inside a list, we need to wrap it inside <ol> tag otherwise ol list items will be transformed into ul list item when dropped\r\n          if (\r\n            view.state.selection instanceof NodeSelection &&\r\n            view.state.selection.node.type.name === 'listItem' &&\r\n            !isDroppedInsideList &&\r\n            listType == 'OL'\r\n          ) {\r\n            const text = droppedNode.textContent;\r\n            if (!text) return;\r\n            const paragraph = view.state.schema.nodes.paragraph?.createAndFill(\r\n              {},\r\n              view.state.schema.text(text),\r\n            );\r\n            const listItem = view.state.schema.nodes.listItem?.createAndFill(\r\n              {},\r\n              paragraph,\r\n            );\r\n\r\n            const newList = view.state.schema.nodes.orderedList?.createAndFill(\r\n              null,\r\n              listItem,\r\n            );\r\n            const slice = new Slice(Fragment.from(newList), 0, 0);\r\n            view.dragging = { slice, move: event.ctrlKey };\r\n          }\r\n        },\r\n        dragend: (view) => {\r\n          view.dom.classList.remove('dragging');\r\n        },\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\nconst GlobalDragHandle = Extension.create({\r\n  name: 'globalDragHandle',\r\n\r\n  addOptions() {\r\n    return {\r\n      dragHandleWidth: 20,\r\n      scrollTreshold: 100,\r\n    };\r\n  },\r\n\r\n  addProseMirrorPlugins() {\r\n    return [\r\n      DragHandlePlugin({\r\n        pluginKey:'globalDragHandle',\r\n        dragHandleWidth: this.options.dragHandleWidth,\r\n        scrollTreshold: this.options.scrollTreshold,\r\n        dragHandleSelector: this.options.dragHandleSelector,\r\n      }),\r\n    ];\r\n  },\r\n});\r\n\r\nexport default GlobalDragHandle;\r\n"],"names":["view","NodeSelection","TextSelection","__serializeForClipboard","Plugin","PluginKey","Slice","Fragment","Extension"],"mappings":"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"}